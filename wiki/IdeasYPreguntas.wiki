 # Hay que mostrar las dos vistas? la plana y la esferica?
 # El editor se conecta al servidor durante el proceso de edición o es autónomo y envia al terminar?
 # Que el editor comparta mucho, mucho, mucho del cliente.
 # Que el editor reciba una imagen y la proyecte sobre la esfera, al igual que el cliente.
 # Que el editor permita manipular la esfera como el cliente.
 # Que el editor permita agregar ciudades haciendo click sobre la esfera.
 # Que el editor permita relacionar mediante flechas ciudades para marcar las relaciones de limites.
 # Que los jugadores conectados vean el proceso de edicion.
 # El editor deberia dar posibilidad de deshacer los comandos ejecutados durante la edicion del mapa? En caso de que el usuario se equivoque?
 # Hay que hacer dos sockets por jugador, uno para el juego y otro para el chat. 

//// Con respecto a esto creo que habria que analizar la posibilidad de o bien mantener la conexion abierta todo el tiempo con cada juagdor en un segundo socket o tener la posibilidad de que el servidor tenga los datos de ip y puerto para abrir una conexion cuando sea 
necesario, y luego el cliente debe tener un "socket en modo servidor" al escucha conexiones.

//// No es buena idea como la experiencia del ftp lo sugiere. Los clientes suelen estar 
detras de firewalls que dificultan este escenario.
 # Se pueden usar Smart Pointers, especialmente reference count smart pointers??? Es decir aquellos smart pointers o ubjetos templates que almacenan o encapsulan un puntero, guardan la cantidad de referencias que tienen y cuando la cantidad de referencias llega a cero hacen el delete del puntero??? Seria muy util para el manejo de memoria ya que en varios lados tendremos que usar punteros.

 # Se puede usar alguna libreria grafica de GUIs para SDL porque sino habria uno que desarrollar sus propios widgets basados en SDL y manejar todos los eventos, mostrar texto, si bien no es imposible, es bastante complejo.